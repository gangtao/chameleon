# create table with event time and water mark control
CREATE TABLE people (
 `name` VARCHAR,
 `country` VARCHAR,
 `age` INT,
 `pt` AS PROCTIME(),
 `t` TIMESTAMP(3),
 `timestamp` TIMESTAMP_LTZ(3) METADATA ,
  WATERMARK FOR t AS t - INTERVAL '1' SECOND
) WITH (
  'connector' = 'kafka',
  'property-version' = 'universal',
  'properties.bootstrap.servers' = 'kafka:9092',
  'topic' = 'topic-A',
  'scan.startup.mode' = 'earliest-offset',
  'value.format' = 'json',
  'properties.group.id' = 'my-working-group'
);

# mode
SET 'sql-client.execution.result-mode' = 'changelog';
SET 'sql-client.execution.result-mode' = 'table';
SET 'sql-client.execution.result-mode' = 'tableau';  

# checking latancy
SELECT CAST(UNIX_TIMESTAMP(CAST(pt AS STRING)) as BIGINT)  - CAST(UNIX_TIMESTAMP(CAST(t AS STRING)) as BIGINT) 
FROM people;

https://issues.apache.org/jira/browse/FLINK-19200

# aggregation
SELECT name, SUM(C) 
FROM 
( SELECT name, COUNT(*) as C
FROM people 
GROUP BY name) 
GROUP BY name;

SELECT name, SUM(age) 
FROM people 
GROUP BY name;

# distinct aggregation
SELECT country, COUNT(DISTINCT name)
FROM people
GROUP BY country;

# filter
SELECT *
FROM people
WHERE age > 40;

# tumbling window
SELECT * FROM TABLE(
   TUMBLE(TABLE people, DESCRIPTOR(t), INTERVAL '1' MINUTES));

SELECT * FROM TABLE(
   TUMBLE(
     DATA => TABLE people,
     TIMECOL => DESCRIPTOR(t),
     SIZE => INTERVAL '1' SECOND));

SELECT window_start, window_end, name, COUNT(*)
  FROM TABLE(
    TUMBLE(TABLE people, DESCRIPTOR(t), INTERVAL '10' SECOND))
  GROUP BY window_start, window_end, name;

# hopping window
SELECT window_start, window_end, country, SUM(age)
  FROM TABLE(
    HOP(TABLE people, DESCRIPTOR(t), INTERVAL '2' SECOND, INTERVAL '10' SECOND))
  GROUP BY window_start, window_end, country;

# windowed top N


# join
CREATE TABLE fullname (
    name VARCHAR,
    fullname VARCHAR
) WITH ( 
    'connector' = 'filesystem',
    'path' = '/data/lookup.csv',
    'format' = 'csv'
);

CREATE TABLE phone (
    name VARCHAR,
    phone VARCHAR
) WITH ( 
    'connector' = 'filesystem',
    'path' = '/data/phone.csv',
    'format' = 'csv'
);

SELECT fullname.name, fullname.fullname, phone.phone
FROM fullname
JOIN phone
ON fullname.name = phone.name

# stream/table join
SELECT people.name, fullname.fullname
FROM people
JOIN fullname
ON people.name = fullname.name

# stream to stream join
CREATE TABLE lookup (
 `name` VARCHAR,
 `fullname` VARCHAR,
 `pt` AS PROCTIME()
) WITH (
  'connector' = 'kafka',
  'property-version' = 'universal',
  'properties.bootstrap.servers' = 'kafka:9092',
  'topic' = 'topic-B',
  'scan.startup.mode' = 'earliest-offset',
  'value.format' = 'json',
  'properties.group.id' = 'my-working-group'
);

# interval join
SELECT people.name, people.age, people.country, people.pt, lookup.fullname
FROM people
LEFT JOIN lookup 
ON people.name = lookup.name
AND people.pt BETWEEN lookup.pt - INTERVAL '5' SECOND AND lookup.pt