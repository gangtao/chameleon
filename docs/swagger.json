{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "chameleon is a data stream generator.",
        "title": "chameleon",
        "contact": {
            "name": "Gang Tao",
            "email": "gang.tao@outlook.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/": {
            "get": {
                "description": "get the status of server.",
                "consumes": [
                    "*/*"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "health check"
                ],
                "summary": "Show the status of server.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/generators": {
            "get": {
                "description": "list all generators.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "list all generators.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a generator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "Create a generator.",
                "parameters": [
                    {
                        "description": "generator configuration",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/generator.GeneratorConfig"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/generator.GeneratorConfig"
                        }
                    },
                    "409": {
                        "description": ""
                    }
                }
            }
        },
        "/generators/{name}": {
            "get": {
                "description": "get generator by name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "get generator by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generator.GeneratorConfig"
                        }
                    },
                    "409": {
                        "description": ""
                    }
                }
            },
            "delete": {
                "description": "delete generator by name.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "delete generator by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/generators/{name}/start": {
            "post": {
                "description": "start to run a generator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "start to run a generator.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/generators/{name}/status": {
            "post": {
                "description": "get status of a generator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "get status of a generator.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/generator.GeneratorStatus"
                        }
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        },
        "/generators/{name}/stop": {
            "post": {
                "description": "stop a running generator.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "generator"
                ],
                "summary": "stop a running generator.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "configuration name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "404": {
                        "description": ""
                    }
                }
            }
        }
    },
    "definitions": {
        "generator.GeneratorConfig": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "sink": {
                    "$ref": "#/definitions/sink.SinkConfiguration"
                },
                "source": {
                    "$ref": "#/definitions/source.SourceConfiguration"
                }
            }
        },
        "generator.GeneratorStatus": {
            "type": "object",
            "properties": {
                "sink_count": {
                    "type": "integer"
                },
                "source_count": {
                    "type": "integer"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "sink.SinkConfiguration": {
            "type": "object",
            "properties": {
                "config": {
                    "type": "object",
                    "additionalProperties": true
                },
                "name": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "source.SourceConfiguration": {
            "type": "object",
            "properties": {
                "batch_size": {
                    "type": "integer"
                },
                "concurrency": {
                    "type": "integer"
                },
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/source.SourceField"
                    }
                },
                "interval": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "timestamp_field": {
                    "type": "string"
                }
            }
        },
        "source.SourceField": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "name": {
                    "type": "string"
                },
                "range": {
                    "type": "array",
                    "items": {
                        "type": "object"
                    }
                },
                "type": {
                    "type": "string"
                }
            }
        }
    }
}