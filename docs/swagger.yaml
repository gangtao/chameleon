basePath: /
definitions:
  generator.GeneratorConfig:
    properties:
      name:
        type: string
      sink:
        $ref: '#/definitions/sink.SinkConfiguration'
      source:
        $ref: '#/definitions/source.SourceConfiguration'
    type: object
  generator.GeneratorStatus:
    properties:
      sink_count:
        type: integer
      source_count:
        type: integer
      status:
        type: string
    type: object
  sink.SinkConfiguration:
    properties:
      config:
        additionalProperties: true
        type: object
      name:
        type: string
      type:
        type: string
    type: object
  source.SourceConfiguration:
    properties:
      batch_size:
        type: integer
      concurrency:
        type: integer
      fields:
        items:
          $ref: '#/definitions/source.SourceField'
        type: array
      interval:
        items:
          type: integer
        type: array
      name:
        type: string
      timestamp_field:
        type: string
    type: object
  source.SourceField:
    properties:
      limit:
        items:
          type: object
        type: array
      name:
        type: string
      range:
        items:
          type: object
        type: array
      type:
        type: string
    type: object
host: localhost:3000
info:
  contact:
    email: gang.tao@outlook.com
    name: Gang Tao
  description: chameleon is a data stream generator.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: chameleon
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - health check
  /generators:
    get:
      consumes:
      - application/json
      description: list all generators.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              type: string
            type: array
      summary: list all generators.
      tags:
      - generator
    post:
      consumes:
      - application/json
      description: create a generator.
      parameters:
      - description: generator configuration
        in: body
        name: config
        required: true
        schema:
          $ref: '#/definitions/generator.GeneratorConfig'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/generator.GeneratorConfig'
        "409":
          description: ""
      summary: Create a generator.
      tags:
      - generator
  /generators/{name}:
    delete:
      consumes:
      - application/json
      description: delete generator by name.
      parameters:
      - description: configuration name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: ""
        "404":
          description: ""
      summary: delete generator by name.
      tags:
      - generator
    get:
      consumes:
      - application/json
      description: get generator by name.
      parameters:
      - description: configuration name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generator.GeneratorConfig'
        "409":
          description: ""
      summary: get generator by name.
      tags:
      - generator
  /generators/{name}/start:
    post:
      consumes:
      - application/json
      description: start to run a generator.
      parameters:
      - description: configuration name
        in: path
        name: name
        required: true
        type: string
      - description: timeout for generating
        in: query
        name: timeout
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: start to run a generator.
      tags:
      - generator
  /generators/{name}/status:
    post:
      consumes:
      - application/json
      description: get status of a generator.
      parameters:
      - description: configuration name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/generator.GeneratorStatus'
        "404":
          description: ""
      summary: get status of a generator.
      tags:
      - generator
  /generators/{name}/stop:
    post:
      consumes:
      - application/json
      description: stop a running generator.
      parameters:
      - description: configuration name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "404":
          description: ""
      summary: stop a running generator.
      tags:
      - generator
schemes:
- http
swagger: "2.0"
